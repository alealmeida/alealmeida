{"ast":null,"code":"'use strict';\n\nvar jstransformer = require('jstransformer');\n\nvar uglify = require('uglify-js');\n\nvar CleanCSS = require('clean-css');\n\nvar resolve = require('resolve');\n\nmodule.exports = filter;\n\nfunction filter(name, str, options, currentDirectory, funcName) {\n  funcName = funcName || 'render';\n  var tr;\n\n  try {\n    try {\n      tr = require(resolve.sync('jstransformer-' + name, {\n        basedir: currentDirectory || process.cwd()\n      }));\n    } catch (ex) {\n      tr = require('jstransformer-' + name);\n    }\n\n    tr = jstransformer(tr);\n  } catch (ex) {}\n\n  if (tr) {\n    // TODO: we may want to add a way for people to separately specify \"locals\"\n    var result = tr[funcName](str, options, options).body;\n\n    if (options && options.minify) {\n      try {\n        switch (tr.outputFormat) {\n          case 'js':\n            result = uglify.minify(result, {\n              fromString: true\n            }).code;\n            break;\n\n          case 'css':\n            result = new CleanCSS().minify(result).styles;\n            break;\n        }\n      } catch (ex) {// better to fail to minify than output nothing\n      }\n    }\n\n    return result;\n  } else {\n    var err = new Error('unknown filter \":' + name + '\"');\n    err.code = 'UNKNOWN_FILTER';\n    throw err;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}