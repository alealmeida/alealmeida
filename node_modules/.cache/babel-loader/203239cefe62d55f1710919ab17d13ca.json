{"ast":null,"code":"import _classCallCheck from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar React = require('react');\n\nvar FocusTrap = require('focus-trap-react');\n\nvar displace = require('react-displace');\n\nvar noScroll = require('no-scroll');\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getApplicationNode = function () {\n      if (_this.props.getApplicationNode) return _this.props.getApplicationNode();\n      return _this.props.applicationNode;\n    };\n\n    _this.checkUnderlayClick = function (event) {\n      if (_this.dialogNode && _this.dialogNode.contains(event.target) // If the click is on the scrollbar we don't want to close the modal.\n      || event.pageX > event.target.clientWidth || event.pageY > event.target.clientHeight) return;\n\n      _this.exit();\n    };\n\n    _this.checkDocumentKeyDown = function (event) {\n      if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n        _this.exit();\n      }\n    };\n\n    _this.exit = function () {\n      if (_this.props.onExit) {\n        _this.props.onExit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.titleText && !this.props.titleId) {\n        throw new Error('react-aria-modal instances should have a `titleText` or `titleId`');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var props = this.props;\n\n      if (props.onEnter) {\n        props.onEnter();\n      } // Timeout to ensure this happens *after* focus has moved\n\n\n      var applicationNode = this.getApplicationNode();\n      setTimeout(function () {\n        if (applicationNode) {\n          applicationNode.setAttribute('aria-hidden', 'true');\n        }\n      }, 0);\n\n      if (props.escapeExits) {\n        document.addEventListener('keydown', this.checkDocumentKeyDown);\n      }\n\n      if (this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n        noScroll.off();\n      } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.scrollDisabled) {\n        noScroll.off();\n      }\n\n      var applicationNode = this.getApplicationNode();\n\n      if (applicationNode) {\n        applicationNode.setAttribute('aria-hidden', 'false');\n      }\n\n      document.removeEventListener('keydown', this.checkDocumentKeyDown);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var style = {};\n\n      if (props.includeDefaultStyles) {\n        style = {\n          position: 'fixed',\n          top: 0,\n          right: 0,\n          width: '100vw',\n          height: '100vh',\n          zIndex: 1050,\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          textAlign: 'center'\n        };\n\n        if (props.underlayColor) {\n          style.background = props.underlayColor;\n        }\n\n        if (props.underlayClickExits) {\n          style.cursor = 'pointer';\n        }\n      }\n\n      if (props.underlayStyle) {\n        for (var key in props.underlayStyle) {\n          if (!props.underlayStyle.hasOwnProperty(key)) continue;\n          style[key] = props.underlayStyle[key];\n        }\n      }\n\n      var underlayProps = {\n        className: props.underlayClass,\n        style: style\n      };\n\n      if (props.underlayClickExits) {\n        underlayProps.onMouseDown = this.checkUnderlayClick;\n      }\n\n      for (var prop in this.props.underlayProps) {\n        underlayProps[prop] = this.props.underlayProps[prop];\n      }\n\n      var verticalCenterStyle = {};\n\n      if (props.includeDefaultStyles) {\n        verticalCenterStyle = {\n          display: 'flex',\n          height: '100%',\n          verticalAlign: 'middle'\n        };\n      }\n\n      var verticalCenterHelperProps = {\n        key: 'a',\n        style: verticalCenterStyle\n      };\n      var dialogStyle = {};\n\n      if (props.includeDefaultStyles) {\n        dialogStyle = {\n          display: 'flex',\n          textAlign: 'left',\n          top: 0,\n          maxWidth: '100%',\n          cursor: 'default',\n          outline: props.focusDialog ? 0 : null\n        };\n\n        if (props.verticallyCenter) {\n          dialogStyle.verticalAlign = 'middle';\n          dialogStyle.top = 0;\n        }\n      }\n\n      if (props.dialogStyle) {\n        for (var _key2 in props.dialogStyle) {\n          if (!props.dialogStyle.hasOwnProperty(_key2)) continue;\n          dialogStyle[_key2] = props.dialogStyle[_key2];\n        }\n      }\n\n      var dialogProps = {\n        key: 'b',\n        ref: function (el) {\n          this.dialogNode = el;\n        }.bind(this),\n        role: props.alert ? 'alertdialog' : 'dialog',\n        id: props.dialogId,\n        className: props.dialogClass,\n        style: dialogStyle\n      };\n\n      if (props.titleId) {\n        dialogProps['aria-labelledby'] = props.titleId;\n      } else if (props.titleText) {\n        dialogProps['aria-label'] = props.titleText;\n      }\n\n      if (props.focusDialog) {\n        dialogProps.tabIndex = '-1';\n      } // Apply data- and aria- attributes passed as props\n\n\n      for (var _key3 in props) {\n        if (/^(data-|aria-)/.test(_key3)) {\n          dialogProps[_key3] = props[_key3];\n        }\n      }\n\n      var childrenArray = [React.createElement('', dialogProps, props.children)];\n\n      if (props.verticallyCenter) {\n        childrenArray.unshift(React.createElement('', verticalCenterHelperProps));\n      }\n\n      var focusTrapOptions = props.focusTrapOptions || {};\n\n      if (props.focusDialog || props.initialFocus) {\n        focusTrapOptions.initialFocus = props.focusDialog ? \"#\".concat(this.props.dialogId) : props.initialFocus;\n      }\n\n      focusTrapOptions.escapeDeactivates = props.escapeExits;\n      return React.createElement(FocusTrap, {\n        focusTrapOptions: focusTrapOptions,\n        paused: props.focusTrapPaused\n      }, React.createElement('div', underlayProps, childrenArray));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nModal.defaultProps = {\n  underlayProps: {},\n  dialogId: 'react-aria-modal-dialog',\n  underlayClickExits: true,\n  escapeExits: true,\n  underlayColor: 'rgba(0,0,0,0)',\n  includeDefaultStyles: false,\n  focusTrapPaused: false,\n  scrollDisabled: true\n};\nvar DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function (input) {\n  return displace(Modal, {\n    renderTo: input\n  });\n};\n\nexport default DisplacedModal;","map":{"version":3,"sources":["/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/src/react-aria-modal.js"],"names":["React","require","FocusTrap","displace","noScroll","Modal","getApplicationNode","props","applicationNode","checkUnderlayClick","event","dialogNode","contains","target","pageX","clientWidth","pageY","clientHeight","exit","checkDocumentKeyDown","key","keyCode","onExit","titleText","titleId","Error","onEnter","setTimeout","setAttribute","escapeExits","document","addEventListener","scrollDisabled","on","prevProps","off","removeEventListener","style","includeDefaultStyles","position","top","right","width","height","zIndex","overflowX","overflowY","WebkitOverflowScrolling","textAlign","underlayColor","background","underlayClickExits","cursor","underlayStyle","hasOwnProperty","underlayProps","className","underlayClass","onMouseDown","prop","verticalCenterStyle","display","verticalAlign","verticalCenterHelperProps","dialogStyle","maxWidth","outline","focusDialog","verticallyCenter","dialogProps","ref","el","bind","role","alert","id","dialogId","dialogClass","tabIndex","test","childrenArray","createElement","children","unshift","focusTrapOptions","initialFocus","escapeDeactivates","paused","focusTrapPaused","Component","defaultProps","DisplacedModal","renderTo","input"],"mappings":"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","sourcesContent":["const React = require('react');\nconst FocusTrap = require('focus-trap-react');\nconst displace = require('react-displace');\nconst noScroll = require('no-scroll');\n\nclass Modal extends React.Component {\n  static defaultProps = {\n    underlayProps: {},\n    dialogId: 'react-aria-modal-dialog',\n    underlayClickExits: true,\n    escapeExits: true,\n    underlayColor: 'rgba(0,0,0,0)',\n    includeDefaultStyles: false,\n    focusTrapPaused: false,\n    scrollDisabled: true\n  };\n\n  componentWillMount() {\n    if (!this.props.titleText && !this.props.titleId) {\n      throw new Error(\n        'react-aria-modal instances should have a `titleText` or `titleId`'\n      );\n    }\n  }\n\n  componentDidMount() {\n    const props = this.props;\n    if (props.onEnter) {\n      props.onEnter();\n    }\n\n    // Timeout to ensure this happens *after* focus has moved\n    const applicationNode = this.getApplicationNode();\n    setTimeout(function() {\n      if (applicationNode) {\n        applicationNode.setAttribute('aria-hidden', 'true');\n      }\n    }, 0);\n\n    if (props.escapeExits) {\n      document.addEventListener('keydown', this.checkDocumentKeyDown);\n    }\n\n    if (this.props.scrollDisabled) {\n      noScroll.on();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n      noScroll.off();\n    } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n      noScroll.on();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.scrollDisabled) {\n      noScroll.off();\n    }\n    const applicationNode = this.getApplicationNode();\n    if (applicationNode) {\n      applicationNode.setAttribute('aria-hidden', 'false');\n    }\n    document.removeEventListener('keydown', this.checkDocumentKeyDown);\n  }\n\n  getApplicationNode = () => {\n    if (this.props.getApplicationNode) return this.props.getApplicationNode();\n    return this.props.applicationNode;\n  };\n\n  checkUnderlayClick = event => {\n    if (\n      this.dialogNode && this.dialogNode.contains(event.target)\n      // If the click is on the scrollbar we don't want to close the modal.\n      || event.pageX > event.target.clientWidth\n      || event.pageY > event.target.clientHeight\n    ) return;\n    this.exit();\n  };\n\n  checkDocumentKeyDown = event => {\n    if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n      this.exit();\n    }\n  };\n\n  exit = () => {\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    let style = {};\n    if (props.includeDefaultStyles) {\n      style = {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 1050,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        textAlign: 'center'\n      };\n\n      if (props.underlayColor) {\n        style.background = props.underlayColor;\n      }\n\n      if (props.underlayClickExits) {\n        style.cursor = 'pointer';\n      }\n    }\n\n    if (props.underlayStyle) {\n      for (const key in props.underlayStyle) {\n        if (!props.underlayStyle.hasOwnProperty(key)) continue;\n        style[key] = props.underlayStyle[key];\n      }\n    }\n\n    const underlayProps = {\n      className: props.underlayClass,\n      style: style\n    };\n\n    if (props.underlayClickExits) {\n      underlayProps.onMouseDown = this.checkUnderlayClick;\n    }\n\n    for (const prop in this.props.underlayProps) {\n      underlayProps[prop] = this.props.underlayProps[prop];\n    }\n\n    let verticalCenterStyle = {};\n    if (props.includeDefaultStyles) {\n      verticalCenterStyle = {\n        display: 'flex',\n        height: '100%',\n        verticalAlign: 'middle'\n      };\n    }\n\n    const verticalCenterHelperProps = {\n      key: 'a',\n      style: verticalCenterStyle\n    };\n\n    let dialogStyle = {};\n    if (props.includeDefaultStyles) {\n      dialogStyle = {\n        display: 'flex',\n        textAlign: 'left',\n        top: 0,\n        maxWidth: '100%',\n        cursor: 'default',\n        outline: props.focusDialog ? 0 : null\n      };\n\n      if (props.verticallyCenter) {\n        dialogStyle.verticalAlign = 'middle';\n        dialogStyle.top = 0;\n      }\n    }\n\n    if (props.dialogStyle) {\n      for (const key in props.dialogStyle) {\n        if (!props.dialogStyle.hasOwnProperty(key)) continue;\n        dialogStyle[key] = props.dialogStyle[key];\n      }\n    }\n\n    const dialogProps = {\n      key: 'b',\n      ref: function(el) {\n        this.dialogNode = el;\n      }.bind(this),\n      role: props.alert ? 'alertdialog' : 'dialog',\n      id: props.dialogId,\n      className: props.dialogClass,\n      style: dialogStyle\n    };\n    if (props.titleId) {\n      dialogProps['aria-labelledby'] = props.titleId;\n    } else if (props.titleText) {\n      dialogProps['aria-label'] = props.titleText;\n    }\n    if (props.focusDialog) {\n      dialogProps.tabIndex = '-1';\n    }\n\n    // Apply data- and aria- attributes passed as props\n    for (let key in props) {\n      if (/^(data-|aria-)/.test(key)) {\n        dialogProps[key] = props[key];\n      }\n    }\n\n    const childrenArray = [\n      React.createElement('', dialogProps, props.children)\n    ];\n\n    if (props.verticallyCenter) {\n      childrenArray.unshift(\n        React.createElement('', verticalCenterHelperProps)\n      );\n    }\n\n    const focusTrapOptions = props.focusTrapOptions || {};\n    if (props.focusDialog || props.initialFocus) {\n      focusTrapOptions.initialFocus = props.focusDialog\n        ? `#${this.props.dialogId}`\n        : props.initialFocus;\n    }\n    focusTrapOptions.escapeDeactivates = props.escapeExits;\n\n    return React.createElement(\n      FocusTrap,\n      {\n        focusTrapOptions,\n        paused: props.focusTrapPaused\n      },\n      React.createElement('div', underlayProps, childrenArray)\n    );\n  }\n}\n\nconst DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function(input) {\n  return displace(Modal, { renderTo: input });\n};\n\n\nexport default DisplacedModal;"]},"metadata":{},"sourceType":"module"}