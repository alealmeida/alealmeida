{"ast":null,"code":"import _classCallCheck from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar React = require('react');\n\nvar FocusTrap = require('focus-trap-react');\n\nvar displace = require('react-displace');\n\nvar noScroll = require('no-scroll');\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getApplicationNode = function () {\n      if (_this.props.getApplicationNode) return _this.props.getApplicationNode();\n      return _this.props.applicationNode;\n    };\n\n    _this.checkUnderlayClick = function (event) {\n      if (_this.dialogNode && _this.dialogNode.contains(event.target) // If the click is on the scrollbar we don't want to close the modal.\n      || event.pageX > event.target.clientWidth || event.pageY > event.target.clientHeight) return;\n\n      _this.exit();\n    };\n\n    _this.checkDocumentKeyDown = function (event) {\n      if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n        _this.exit();\n      }\n    };\n\n    _this.exit = function () {\n      if (_this.props.onExit) {\n        _this.props.onExit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.titleText && !this.props.titleId) {\n        throw new Error('react-aria-modal instances should have a `titleText` or `titleId`');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var props = this.props;\n\n      if (props.onEnter) {\n        props.onEnter();\n      } // Timeout to ensure this happens *after* focus has moved\n\n\n      var applicationNode = this.getApplicationNode();\n      setTimeout(function () {\n        if (applicationNode) {\n          applicationNode.setAttribute('aria-hidden', 'true');\n        }\n      }, 0);\n\n      if (props.escapeExits) {\n        document.addEventListener('keydown', this.checkDocumentKeyDown);\n      }\n\n      if (this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n        noScroll.off();\n      } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.scrollDisabled) {\n        noScroll.off();\n      }\n\n      var applicationNode = this.getApplicationNode();\n\n      if (applicationNode) {\n        applicationNode.setAttribute('aria-hidden', 'false');\n      }\n\n      document.removeEventListener('keydown', this.checkDocumentKeyDown);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var style = {};\n\n      if (props.includeDefaultStyles) {\n        style = {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: 1050,\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          textAlign: 'center'\n        };\n\n        if (props.underlayColor) {\n          style.background = props.underlayColor;\n        }\n\n        if (props.underlayClickExits) {\n          style.cursor = 'pointer';\n        }\n      }\n\n      if (props.underlayStyle) {\n        for (var key in props.underlayStyle) {\n          if (!props.underlayStyle.hasOwnProperty(key)) continue;\n          style[key] = props.underlayStyle[key];\n        }\n      }\n\n      var underlayProps = {\n        className: props.underlayClass,\n        style: style\n      };\n\n      if (props.underlayClickExits) {\n        underlayProps.onMouseDown = this.checkUnderlayClick;\n      }\n\n      for (var prop in this.props.underlayProps) {\n        underlayProps[prop] = this.props.underlayProps[prop];\n      }\n\n      var verticalCenterStyle = {};\n\n      if (props.includeDefaultStyles) {\n        verticalCenterStyle = {\n          display: 'inline-block',\n          height: '100%',\n          verticalAlign: 'middle'\n        };\n      }\n\n      var verticalCenterHelperProps = {\n        key: 'a',\n        style: verticalCenterStyle\n      };\n      var dialogStyle = {};\n\n      if (props.includeDefaultStyles) {\n        dialogStyle = {\n          display: 'inline-block',\n          textAlign: 'left',\n          top: 0,\n          maxWidth: '100%',\n          cursor: 'default',\n          outline: props.focusDialog ? 0 : null\n        };\n\n        if (props.verticallyCenter) {\n          dialogStyle.verticalAlign = 'middle';\n          dialogStyle.top = 0;\n        }\n      }\n\n      if (props.dialogStyle) {\n        for (var _key2 in props.dialogStyle) {\n          if (!props.dialogStyle.hasOwnProperty(_key2)) continue;\n          dialogStyle[_key2] = props.dialogStyle[_key2];\n        }\n      }\n\n      var dialogProps = {\n        key: 'b',\n        ref: function (el) {\n          this.dialogNode = el;\n        }.bind(this),\n        role: props.alert ? 'alertdialog' : 'dialog',\n        id: props.dialogId,\n        className: props.dialogClass,\n        style: dialogStyle\n      };\n\n      if (props.titleId) {\n        dialogProps['aria-labelledby'] = props.titleId;\n      } else if (props.titleText) {\n        dialogProps['aria-label'] = props.titleText;\n      }\n\n      if (props.focusDialog) {\n        dialogProps.tabIndex = '-1';\n      } // Apply data- and aria- attributes passed as props\n\n\n      for (var _key3 in props) {\n        if (/^(data-|aria-)/.test(_key3)) {\n          dialogProps[_key3] = props[_key3];\n        }\n      }\n\n      var childrenArray = [React.createElement('div', dialogProps, props.children)];\n\n      if (props.verticallyCenter) {\n        childrenArray.unshift(React.createElement('div', verticalCenterHelperProps));\n      }\n\n      var focusTrapOptions = props.focusTrapOptions || {};\n\n      if (props.focusDialog || props.initialFocus) {\n        focusTrapOptions.initialFocus = props.focusDialog ? \"#\".concat(this.props.dialogId) : props.initialFocus;\n      }\n\n      focusTrapOptions.escapeDeactivates = props.escapeExits;\n      return React.createElement(FocusTrap, {\n        focusTrapOptions: focusTrapOptions,\n        paused: props.focusTrapPaused\n      }, React.createElement('div', underlayProps, childrenArray));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nModal.defaultProps = {\n  underlayProps: {},\n  dialogId: 'react-aria-modal-dialog',\n  underlayClickExits: true,\n  escapeExits: true,\n  underlayColor: 'rgba(0,0,0,0.5)',\n  includeDefaultStyles: true,\n  focusTrapPaused: false,\n  scrollDisabled: true\n};\nvar DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function (input) {\n  return displace(Modal, {\n    renderTo: input\n  });\n};\n\nmodule.exports = DisplacedModal;","map":{"version":3,"sources":["/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/src/react-aria-modal.js"],"names":["React","require","FocusTrap","displace","noScroll","Modal","getApplicationNode","props","applicationNode","checkUnderlayClick","event","dialogNode","contains","target","pageX","clientWidth","pageY","clientHeight","exit","checkDocumentKeyDown","key","keyCode","onExit","titleText","titleId","Error","onEnter","setTimeout","setAttribute","escapeExits","document","addEventListener","scrollDisabled","on","prevProps","off","removeEventListener","style","includeDefaultStyles","position","top","left","width","height","zIndex","overflowX","overflowY","WebkitOverflowScrolling","textAlign","underlayColor","background","underlayClickExits","cursor","underlayStyle","hasOwnProperty","underlayProps","className","underlayClass","onMouseDown","prop","verticalCenterStyle","display","verticalAlign","verticalCenterHelperProps","dialogStyle","maxWidth","outline","focusDialog","verticallyCenter","dialogProps","ref","el","bind","role","alert","id","dialogId","dialogClass","tabIndex","test","childrenArray","createElement","children","unshift","focusTrapOptions","initialFocus","escapeDeactivates","paused","focusTrapPaused","Component","defaultProps","DisplacedModal","renderTo","input","module","exports"],"mappings":"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","sourcesContent":["const React = require('react');\nconst FocusTrap = require('focus-trap-react');\nconst displace = require('react-displace');\nconst noScroll = require('no-scroll');\n\nclass Modal extends React.Component {\n    static defaultProps = {\n        underlayProps: {},\n        dialogId: 'react-aria-modal-dialog',\n        underlayClickExits: true,\n        escapeExits: true,\n        underlayColor: 'rgba(0,0,0,0.5)',\n        includeDefaultStyles: true,\n        focusTrapPaused: false,\n        scrollDisabled: true\n    };\n\n    componentWillMount() {\n        if (!this.props.titleText && !this.props.titleId) {\n            throw new Error(\n                'react-aria-modal instances should have a `titleText` or `titleId`'\n            );\n        }\n    }\n\n    componentDidMount() {\n        const props = this.props;\n        if (props.onEnter) {\n            props.onEnter();\n        }\n\n        // Timeout to ensure this happens *after* focus has moved\n        const applicationNode = this.getApplicationNode();\n        setTimeout(function() {\n            if (applicationNode) {\n                applicationNode.setAttribute('aria-hidden', 'true');\n            }\n        }, 0);\n\n        if (props.escapeExits) {\n            document.addEventListener('keydown', this.checkDocumentKeyDown);\n        }\n\n        if (this.props.scrollDisabled) {\n            noScroll.on();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n            noScroll.off();\n        } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n            noScroll.on();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.scrollDisabled) {\n            noScroll.off();\n        }\n        const applicationNode = this.getApplicationNode();\n        if (applicationNode) {\n            applicationNode.setAttribute('aria-hidden', 'false');\n        }\n        document.removeEventListener('keydown', this.checkDocumentKeyDown);\n    }\n\n    getApplicationNode = () => {\n        if (this.props.getApplicationNode) return this.props.getApplicationNode();\n        return this.props.applicationNode;\n    };\n\n    checkUnderlayClick = event => {\n        if (\n            this.dialogNode && this.dialogNode.contains(event.target)\n            // If the click is on the scrollbar we don't want to close the modal.\n            ||\n            event.pageX > event.target.clientWidth ||\n            event.pageY > event.target.clientHeight\n        ) return;\n        this.exit();\n    };\n\n    checkDocumentKeyDown = event => {\n        if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n            this.exit();\n        }\n    };\n\n    exit = () => {\n        if (this.props.onExit) {\n            this.props.onExit();\n        }\n    };\n\n    render() {\n        const props = this.props;\n\n        let style = {};\n        if (props.includeDefaultStyles) {\n            style = {\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                zIndex: 1050,\n                overflowX: 'hidden',\n                overflowY: 'auto',\n                WebkitOverflowScrolling: 'touch',\n                textAlign: 'center'\n            };\n\n            if (props.underlayColor) {\n                style.background = props.underlayColor;\n            }\n\n            if (props.underlayClickExits) {\n                style.cursor = 'pointer';\n            }\n        }\n\n        if (props.underlayStyle) {\n            for (const key in props.underlayStyle) {\n                if (!props.underlayStyle.hasOwnProperty(key)) continue;\n                style[key] = props.underlayStyle[key];\n            }\n        }\n\n        const underlayProps = {\n            className: props.underlayClass,\n            style: style\n        };\n\n        if (props.underlayClickExits) {\n            underlayProps.onMouseDown = this.checkUnderlayClick;\n        }\n\n        for (const prop in this.props.underlayProps) {\n            underlayProps[prop] = this.props.underlayProps[prop];\n        }\n\n        let verticalCenterStyle = {};\n        if (props.includeDefaultStyles) {\n            verticalCenterStyle = {\n                display: 'inline-block',\n                height: '100%',\n                verticalAlign: 'middle'\n            };\n        }\n\n        const verticalCenterHelperProps = {\n            key: 'a',\n            style: verticalCenterStyle\n        };\n\n        let dialogStyle = {};\n        if (props.includeDefaultStyles) {\n            dialogStyle = {\n                display: 'inline-block',\n                textAlign: 'left',\n                top: 0,\n                maxWidth: '100%',\n                cursor: 'default',\n                outline: props.focusDialog ? 0 : null\n            };\n\n            if (props.verticallyCenter) {\n                dialogStyle.verticalAlign = 'middle';\n                dialogStyle.top = 0;\n            }\n        }\n\n        if (props.dialogStyle) {\n            for (const key in props.dialogStyle) {\n                if (!props.dialogStyle.hasOwnProperty(key)) continue;\n                dialogStyle[key] = props.dialogStyle[key];\n            }\n        }\n\n        const dialogProps = {\n            key: 'b',\n            ref: function(el) {\n                this.dialogNode = el;\n            }.bind(this),\n            role: props.alert ? 'alertdialog' : 'dialog',\n            id: props.dialogId,\n            className: props.dialogClass,\n            style: dialogStyle\n        };\n        if (props.titleId) {\n            dialogProps['aria-labelledby'] = props.titleId;\n        } else if (props.titleText) {\n            dialogProps['aria-label'] = props.titleText;\n        }\n        if (props.focusDialog) {\n            dialogProps.tabIndex = '-1';\n        }\n\n        // Apply data- and aria- attributes passed as props\n        for (let key in props) {\n            if (/^(data-|aria-)/.test(key)) {\n                dialogProps[key] = props[key];\n            }\n        }\n\n        const childrenArray = [\n            React.createElement('div', dialogProps, props.children)\n        ];\n\n        if (props.verticallyCenter) {\n            childrenArray.unshift(\n                React.createElement('div', verticalCenterHelperProps)\n            );\n        }\n\n        const focusTrapOptions = props.focusTrapOptions || {};\n        if (props.focusDialog || props.initialFocus) {\n            focusTrapOptions.initialFocus = props.focusDialog ?\n                `#${this.props.dialogId}` :\n                props.initialFocus;\n        }\n        focusTrapOptions.escapeDeactivates = props.escapeExits;\n\n        return React.createElement(\n            FocusTrap, {\n                focusTrapOptions,\n                paused: props.focusTrapPaused\n            },\n            React.createElement('div', underlayProps, childrenArray)\n        );\n    }\n}\n\nconst DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function(input) {\n    return displace(Modal, {\n        renderTo: input\n    });\n};\n\nmodule.exports = DisplacedModal;"]},"metadata":{},"sourceType":"module"}