{"ast":null,"code":"import _classCallCheck from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar React = require('react');\n\nvar FocusTrap = require('focus-trap-react');\n\nvar displace = require('react-displace');\n\nvar noScroll = require('no-scroll');\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getApplicationNode = function () {\n      if (_this.props.getApplicationNode) return _this.props.getApplicationNode();\n      return _this.props.applicationNode;\n    };\n\n    _this.checkUnderlayClick = function (event) {\n      if (_this.dialogNode && _this.dialogNode.contains(event.target) // If the click is on the scrollbar we don't want to close the modal.\n      || event.pageX > event.target.clientWidth || event.pageY > event.target.clientHeight) return;\n\n      _this.exit();\n    };\n\n    _this.checkDocumentKeyDown = function (event) {\n      if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n        _this.exit();\n      }\n    };\n\n    _this.exit = function () {\n      if (_this.props.onExit) {\n        _this.props.onExit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.titleText && !this.props.titleId) {\n        throw new Error('react-aria-modal instances should have a `titleText` or `titleId`');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var props = this.props;\n\n      if (props.onEnter) {\n        props.onEnter();\n      } // Timeout to ensure this happens *after* focus has moved\n\n\n      var applicationNode = this.getApplicationNode();\n      setTimeout(function () {\n        if (applicationNode) {\n          applicationNode.setAttribute('aria-hidden', 'true');\n        }\n      }, 0);\n\n      if (props.escapeExits) {\n        document.addEventListener('keydown', this.checkDocumentKeyDown);\n      }\n\n      if (this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n        noScroll.off();\n      } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.scrollDisabled) {\n        noScroll.off();\n      }\n\n      var applicationNode = this.getApplicationNode();\n\n      if (applicationNode) {\n        applicationNode.setAttribute('aria-hidden', 'false');\n      }\n\n      document.removeEventListener('keydown', this.checkDocumentKeyDown);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var style = {};\n\n      if (props.includeDefaultStyles) {\n        style = {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: 1050,\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          textAlign: 'center'\n        };\n\n        if (props.underlayColor) {\n          style.background = props.underlayColor;\n        }\n\n        if (props.underlayClickExits) {\n          style.cursor = 'pointer';\n        }\n      }\n\n      if (props.underlayStyle) {\n        for (var key in props.underlayStyle) {\n          if (!props.underlayStyle.hasOwnProperty(key)) continue;\n          style[key] = props.underlayStyle[key];\n        }\n      }\n\n      var underlayProps = {\n        className: props.underlayClass,\n        style: style\n      };\n\n      if (props.underlayClickExits) {\n        underlayProps.onMouseDown = this.checkUnderlayClick;\n      }\n\n      for (var prop in this.props.underlayProps) {\n        underlayProps[prop] = this.props.underlayProps[prop];\n      }\n\n      var verticalCenterStyle = {};\n\n      if (props.includeDefaultStyles) {\n        verticalCenterStyle = {\n          display: 'inline-block',\n          height: '100%',\n          verticalAlign: 'middle'\n        };\n      }\n\n      var verticalCenterHelperProps = {\n        key: 'a',\n        style: verticalCenterStyle\n      };\n      var dialogStyle = {};\n\n      if (props.includeDefaultStyles) {\n        dialogStyle = {\n          display: 'inline-block',\n          textAlign: 'left',\n          top: 0,\n          maxWidth: '100%',\n          cursor: 'default',\n          outline: props.focusDialog ? 0 : null\n        };\n\n        if (props.verticallyCenter) {\n          dialogStyle.verticalAlign = 'middle';\n          dialogStyle.top = 0;\n        }\n      }\n\n      if (props.dialogStyle) {\n        for (var _key2 in props.dialogStyle) {\n          if (!props.dialogStyle.hasOwnProperty(_key2)) continue;\n          dialogStyle[_key2] = props.dialogStyle[_key2];\n        }\n      }\n\n      var dialogProps = {\n        key: 'b',\n        ref: function (el) {\n          this.dialogNode = el;\n        }.bind(this),\n        role: props.alert ? 'alertdialog' : 'dialog',\n        id: props.dialogId,\n        className: props.dialogClass,\n        style: dialogStyle\n      };\n\n      if (props.titleId) {\n        dialogProps['aria-labelledby'] = props.titleId;\n      } else if (props.titleText) {\n        dialogProps['aria-label'] = props.titleText;\n      }\n\n      if (props.focusDialog) {\n        dialogProps.tabIndex = '-1';\n      } // Apply data- and aria- attributes passed as props\n\n\n      for (var _key3 in props) {\n        if (/^(data-|aria-)/.test(_key3)) {\n          dialogProps[_key3] = props[_key3];\n        }\n      }\n\n      var childrenArray = [React.createElement('div', dialogProps, props.children)];\n\n      if (props.verticallyCenter) {\n        childrenArray.unshift(React.createElement('div', verticalCenterHelperProps));\n      }\n\n      var focusTrapOptions = props.focusTrapOptions || {};\n\n      if (props.focusDialog || props.initialFocus) {\n        focusTrapOptions.initialFocus = props.focusDialog ? \"#\".concat(this.props.dialogId) : props.initialFocus;\n      }\n\n      focusTrapOptions.escapeDeactivates = props.escapeExits;\n      return React.createElement(FocusTrap, {\n        focusTrapOptions: focusTrapOptions,\n        paused: props.focusTrapPaused\n      }, React.createElement('div', underlayProps, childrenArray));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nModal.defaultProps = {\n  underlayProps: {},\n  dialogId: 'react-aria-modal-dialog',\n  underlayClickExits: true,\n  escapeExits: true,\n  underlayColor: 'rgba(0,0,0,1)',\n  includeDefaultStyles: true,\n  focusTrapPaused: true,\n  scrollDisabled: true\n};\nvar DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function (input) {\n  return displace(Modal, {\n    renderTo: input\n  });\n};\n\nexport default DisplacedModal;","map":{"version":3,"sources":["/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/src/react-aria-modal.js"],"names":["React","require","FocusTrap","displace","noScroll","Modal","getApplicationNode","props","applicationNode","checkUnderlayClick","event","dialogNode","contains","target","pageX","clientWidth","pageY","clientHeight","exit","checkDocumentKeyDown","key","keyCode","onExit","titleText","titleId","Error","onEnter","setTimeout","setAttribute","escapeExits","document","addEventListener","scrollDisabled","on","prevProps","off","removeEventListener","style","includeDefaultStyles","position","top","left","width","height","zIndex","overflowX","overflowY","WebkitOverflowScrolling","textAlign","underlayColor","background","underlayClickExits","cursor","underlayStyle","hasOwnProperty","underlayProps","className","underlayClass","onMouseDown","prop","verticalCenterStyle","display","verticalAlign","verticalCenterHelperProps","dialogStyle","maxWidth","outline","focusDialog","verticallyCenter","dialogProps","ref","el","bind","role","alert","id","dialogId","dialogClass","tabIndex","test","childrenArray","createElement","children","unshift","focusTrapOptions","initialFocus","escapeDeactivates","paused","focusTrapPaused","Component","defaultProps","DisplacedModal","renderTo","input"],"mappings":"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","sourcesContent":["const React = require('react');\nconst FocusTrap = require('focus-trap-react');\nconst displace = require('react-displace');\nconst noScroll = require('no-scroll');\n\nclass Modal extends React.Component {\n\tstatic defaultProps = {\n\t\tunderlayProps: {},\n\t\tdialogId: 'react-aria-modal-dialog',\n\t\tunderlayClickExits: true,\n\t\tescapeExits: true,\n\t\tunderlayColor: 'rgba(0,0,0,1)',\n\t\tincludeDefaultStyles: true,\n\t\tfocusTrapPaused: true,\n\t\tscrollDisabled: true\n\t};\n\n\tcomponentWillMount() {\n\t\tif (!this.props.titleText && !this.props.titleId) {\n\t\t\tthrow new Error(\n\t\t\t\t'react-aria-modal instances should have a `titleText` or `titleId`'\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst props = this.props;\n\t\tif (props.onEnter) {\n\t\t\tprops.onEnter();\n\t\t}\n\n\t\t// Timeout to ensure this happens *after* focus has moved\n\t\tconst applicationNode = this.getApplicationNode();\n\t\tsetTimeout(function() {\n\t\t\tif (applicationNode) {\n\t\t\t\tapplicationNode.setAttribute('aria-hidden', 'true');\n\t\t\t}\n\t\t}, 0);\n\n\t\tif (props.escapeExits) {\n\t\t\tdocument.addEventListener('keydown', this.checkDocumentKeyDown);\n\t\t}\n\n\t\tif (this.props.scrollDisabled) {\n\t\t\tnoScroll.on();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n\t\t\tnoScroll.off();\n\t\t} else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n\t\t\tnoScroll.on();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.props.scrollDisabled) {\n\t\t\tnoScroll.off();\n\t\t}\n\t\tconst applicationNode = this.getApplicationNode();\n\t\tif (applicationNode) {\n\t\t\tapplicationNode.setAttribute('aria-hidden', 'false');\n\t\t}\n\t\tdocument.removeEventListener('keydown', this.checkDocumentKeyDown);\n\t}\n\n\tgetApplicationNode = () => {\n\t\tif (this.props.getApplicationNode) return this.props.getApplicationNode();\n\t\treturn this.props.applicationNode;\n\t};\n\n\tcheckUnderlayClick = event => {\n\t\tif (\n\t\t\tthis.dialogNode && this.dialogNode.contains(event.target)\n\t\t\t// If the click is on the scrollbar we don't want to close the modal.\n\t\t\t||\n\t\t\tevent.pageX > event.target.clientWidth ||\n\t\t\tevent.pageY > event.target.clientHeight\n\t\t) return;\n\t\tthis.exit();\n\t};\n\n\tcheckDocumentKeyDown = event => {\n\t\tif (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n\t\t\tthis.exit();\n\t\t}\n\t};\n\n\texit = () => {\n\t\tif (this.props.onExit) {\n\t\t\tthis.props.onExit();\n\t\t}\n\t};\n\n\trender() {\n\t\tconst props = this.props;\n\n\t\tlet style = {};\n\t\tif (props.includeDefaultStyles) {\n\t\t\tstyle = {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\tzIndex: 1050,\n\t\t\t\toverflowX: 'hidden',\n\t\t\t\toverflowY: 'auto',\n\t\t\t\tWebkitOverflowScrolling: 'touch',\n\t\t\t\ttextAlign: 'center'\n\t\t\t};\n\n\t\t\tif (props.underlayColor) {\n\t\t\t\tstyle.background = props.underlayColor;\n\t\t\t}\n\n\t\t\tif (props.underlayClickExits) {\n\t\t\t\tstyle.cursor = 'pointer';\n\t\t\t}\n\t\t}\n\n\t\tif (props.underlayStyle) {\n\t\t\tfor (const key in props.underlayStyle) {\n\t\t\t\tif (!props.underlayStyle.hasOwnProperty(key)) continue;\n\t\t\t\tstyle[key] = props.underlayStyle[key];\n\t\t\t}\n\t\t}\n\n\t\tconst underlayProps = {\n\t\t\tclassName: props.underlayClass,\n\t\t\tstyle: style\n\t\t};\n\n\t\tif (props.underlayClickExits) {\n\t\t\tunderlayProps.onMouseDown = this.checkUnderlayClick;\n\t\t}\n\n\t\tfor (const prop in this.props.underlayProps) {\n\t\t\tunderlayProps[prop] = this.props.underlayProps[prop];\n\t\t}\n\n\t\tlet verticalCenterStyle = {};\n\t\tif (props.includeDefaultStyles) {\n\t\t\tverticalCenterStyle = {\n\t\t\t\tdisplay: 'inline-block',\n\t\t\t\theight: '100%',\n\t\t\t\tverticalAlign: 'middle'\n\t\t\t};\n\t\t}\n\n\t\tconst verticalCenterHelperProps = {\n\t\t\tkey: 'a',\n\t\t\tstyle: verticalCenterStyle\n\t\t};\n\n\t\tlet dialogStyle = {};\n\t\tif (props.includeDefaultStyles) {\n\t\t\tdialogStyle = {\n\t\t\t\tdisplay: 'inline-block',\n\t\t\t\ttextAlign: 'left',\n\t\t\t\ttop: 0,\n\t\t\t\tmaxWidth: '100%',\n\t\t\t\tcursor: 'default',\n\t\t\t\toutline: props.focusDialog ? 0 : null\n\t\t\t};\n\n\t\t\tif (props.verticallyCenter) {\n\t\t\t\tdialogStyle.verticalAlign = 'middle';\n\t\t\t\tdialogStyle.top = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (props.dialogStyle) {\n\t\t\tfor (const key in props.dialogStyle) {\n\t\t\t\tif (!props.dialogStyle.hasOwnProperty(key)) continue;\n\t\t\t\tdialogStyle[key] = props.dialogStyle[key];\n\t\t\t}\n\t\t}\n\n\t\tconst dialogProps = {\n\t\t\tkey: 'b',\n\t\t\tref: function(el) {\n\t\t\t\tthis.dialogNode = el;\n\t\t\t}.bind(this),\n\t\t\trole: props.alert ? 'alertdialog' : 'dialog',\n\t\t\tid: props.dialogId,\n\t\t\tclassName: props.dialogClass,\n\t\t\tstyle: dialogStyle\n\t\t};\n\t\tif (props.titleId) {\n\t\t\tdialogProps['aria-labelledby'] = props.titleId;\n\t\t} else if (props.titleText) {\n\t\t\tdialogProps['aria-label'] = props.titleText;\n\t\t}\n\t\tif (props.focusDialog) {\n\t\t\tdialogProps.tabIndex = '-1';\n\t\t}\n\n\t\t// Apply data- and aria- attributes passed as props\n\t\tfor (let key in props) {\n\t\t\tif (/^(data-|aria-)/.test(key)) {\n\t\t\t\tdialogProps[key] = props[key];\n\t\t\t}\n\t\t}\n\n\t\tconst childrenArray = [\n\t\t\tReact.createElement('div', dialogProps, props.children)\n\t\t];\n\n\t\tif (props.verticallyCenter) {\n\t\t\tchildrenArray.unshift(\n\t\t\t\tReact.createElement('div', verticalCenterHelperProps)\n\t\t\t);\n\t\t}\n\n\t\tconst focusTrapOptions = props.focusTrapOptions || {};\n\t\tif (props.focusDialog || props.initialFocus) {\n\t\t\tfocusTrapOptions.initialFocus = props.focusDialog ?\n\t\t\t\t`#${this.props.dialogId}` :\n\t\t\t\tprops.initialFocus;\n\t\t}\n\t\tfocusTrapOptions.escapeDeactivates = props.escapeExits;\n\n\t\treturn React.createElement(\n\t\t\tFocusTrap, {\n\t\t\t\tfocusTrapOptions,\n\t\t\t\tpaused: props.focusTrapPaused\n\t\t\t},\n\t\t\tReact.createElement('div', underlayProps, childrenArray)\n\t\t);\n\t}\n}\n\nconst DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function(input) {\n\treturn displace(Modal, {\n\t\trenderTo: input\n\t});\n};\n\nexport default DisplacedModal;"]},"metadata":{},"sourceType":"module"}