{"ast":null,"code":"import _defineProperty from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/src/FullpageReact.js\";\nimport React, { Component } from 'react';\nimport { Fullpage, HorizontalSlider, Slide } from '../lib/index';\nvar changeFullpageSlide = Fullpage.changeFullpageSlide,\n    changeHorizontalSlide = Fullpage.changeHorizontalSlide;\n\nrequire('./normalize.css');\n\nrequire('./skeleton.css');\n\nrequire('./assets/styles/example.styl');\n\nvar fullPageOptions = {\n  // for mouse/wheel events\n  // represents the level of force required to generate a slide change on non-mobile, 0 is default\n  scrollSensitivity: 2,\n  // for touchStart/touchEnd/mobile scrolling\n  // represents the level of force required to generate a slide change on mobile, 0 is default\n  touchSensitivity: 2,\n  scrollSpeed: 500,\n  resetSlides: true,\n  hideScrollBars: true,\n  enableArrowKeys: true,\n  // optional, set the initial vertical slide\n  activeSlide: 0\n};\nvar topNavStyle = {\n  textAlign: 'center',\n  position: 'fixed',\n  width: '100%',\n  cursor: 'pointer',\n  zIndex: 10,\n  backgroundColor: 'rgba(255, 255, 255, 0.4)',\n  top: '0px'\n};\nvar horizontalNavStyle = {\n  position: 'absolute',\n  width: '100%',\n  top: '50%',\n  zIndex: 10\n};\nvar horizontalSliderProps = {\n  name: 'horizontalSlider1',\n  infinite: true\n};\n\nvar FullpageReact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullpageReact, _React$Component);\n\n  function FullpageReact(props) {\n    var _this;\n\n    _classCallCheck(this, FullpageReact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullpageReact).call(this, props));\n    _this.state = {\n      active: {\n        Fullpage: 0,\n        horizontalSlider1: 0\n      }\n    };\n    _this.onSlideChangeStart = _this.onSlideChangeStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSlideChangeEnd = _this.onSlideChangeEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FullpageReact, [{\n    key: \"onSlideChangeStart\",\n    value: function onSlideChangeStart(name, props, state, newState) {\n      if (!this.horizontalNav) {\n        this.horizontalNav = document.getElementById('horizontal-nav');\n      }\n\n      if (name === 'horizontalSlider1') {\n        scrollNavStart(this.horizontalNav);\n      }\n    }\n  }, {\n    key: \"onSlideChangeEnd\",\n    value: function onSlideChangeEnd(name, props, state, newState) {\n      if (name === 'horizontalSlider1') {\n        scrollNavEnd(this.horizontalNav);\n      }\n\n      var oldActive = this.state.active;\n\n      var sliderState = _defineProperty({}, name, newState.activeSlide);\n\n      var updatedState = Object.assign(oldActive, sliderState);\n      this.setState(updatedState);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var active = this.state.active;\n      var currentActive = active.Fullpage;\n      var prevSlide = changeFullpageSlide.bind(null, currentActive - 1);\n      var nextSlide = changeFullpageSlide.bind(null, currentActive + 1);\n      var goToTop = changeFullpageSlide.bind(null, 0);\n      var horizontalSliderName = horizontalSliderProps.name;\n      var horizontalActive = this.state.active[horizontalSliderName];\n      var prevHorizontalSlide = changeHorizontalSlide.bind(null, horizontalSliderName, horizontalActive - 1);\n      var nextHorizontalSlide = changeHorizontalSlide.bind(null, horizontalSliderName, horizontalActive + 1);\n      var topNav = React.createElement(\"div\", {\n        style: topNavStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: prevSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Previous Slide\")), React.createElement(\"span\", {\n        onClick: goToTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Back to Top\")), React.createElement(\"span\", {\n        onClick: nextSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Next Slide\")));\n      var horizontalNav = React.createElement(\"div\", {\n        id: \"horizontal-nav\",\n        style: horizontalNavStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: prevHorizontalSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"PREV\")), React.createElement(\"span\", {\n        style: {\n          position: 'absolute',\n          right: '0px'\n        },\n        onClick: nextHorizontalSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Next\")));\n      var horizontalSlides = [React.createElement(Slide, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Horizontal 1\")), React.createElement(Slide, {\n        style: {\n          backgroundColor: 'yellow'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Horizontal 2\")), React.createElement(Slide, {\n        style: {\n          backgroundColor: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Horizontal 3\"))];\n      horizontalSliderProps.slides = horizontalSlides;\n      var horizontalSlider = React.createElement(HorizontalSlider, Object.assign({\n        id: \"horizontal-slider-1\"\n      }, horizontalSliderProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), horizontalNav);\n      var verticalSlides = [React.createElement(Slide, {\n        style: {\n          backgroundColor: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Slide 1\")), horizontalSlider, React.createElement(Slide, {\n        style: {\n          backgroundColor: 'pink'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Slide 3\"))];\n      fullPageOptions.slides = verticalSlides;\n      return React.createElement(Fullpage, Object.assign({\n        onSlideChangeStart: this.onSlideChangeStart,\n        onSlideChangeEnd: this.onSlideChangeEnd\n      }, fullPageOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), topNav);\n    }\n  }]);\n\n  return FullpageReact;\n}(React.Component);\n\nfunction scrollNavStart(nav) {\n  // make the nav fixed when we start scrolling horizontally\n  nav.style.position = 'fixed';\n}\n\nfunction scrollNavEnd(nav) {\n  // make the nav absolute when scroll finishes\n  nav.style.position = 'absolute';\n}\n\nexport default FullpageReact;","map":{"version":3,"sources":["/Users/ale/Library/Mobile Documents/com~apple~CloudDocs/a/jobs/ws/alealmeida/src/FullpageReact.js"],"names":["React","Component","Fullpage","HorizontalSlider","Slide","changeFullpageSlide","changeHorizontalSlide","require","fullPageOptions","scrollSensitivity","touchSensitivity","scrollSpeed","resetSlides","hideScrollBars","enableArrowKeys","activeSlide","topNavStyle","textAlign","position","width","cursor","zIndex","backgroundColor","top","horizontalNavStyle","horizontalSliderProps","name","infinite","FullpageReact","props","state","active","horizontalSlider1","onSlideChangeStart","bind","onSlideChangeEnd","newState","horizontalNav","document","getElementById","scrollNavStart","scrollNavEnd","oldActive","sliderState","updatedState","Object","assign","setState","currentActive","prevSlide","nextSlide","goToTop","horizontalSliderName","horizontalActive","prevHorizontalSlide","nextHorizontalSlide","topNav","right","horizontalSlides","slides","horizontalSlider","verticalSlides","nav","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Fullpage, HorizontalSlider, Slide } from '../lib/index';\n\nconst { changeFullpageSlide, changeHorizontalSlide } = Fullpage;\n\nrequire('./normalize.css');\nrequire('./skeleton.css');\nrequire('./assets/styles/example.styl');\n\nconst fullPageOptions = {\n  // for mouse/wheel events\n  // represents the level of force required to generate a slide change on non-mobile, 0 is default\n  scrollSensitivity: 2,\n\n  // for touchStart/touchEnd/mobile scrolling\n  // represents the level of force required to generate a slide change on mobile, 0 is default\n  touchSensitivity: 2,\n  scrollSpeed: 500,\n  resetSlides: true,\n  hideScrollBars: true,\n  enableArrowKeys: true,\n\n  // optional, set the initial vertical slide\n  activeSlide: 0\n};\n\nconst topNavStyle = {\n  textAlign: 'center',\n  position: 'fixed',\n  width: '100%',\n  cursor: 'pointer',\n  zIndex: 10,\n  backgroundColor: 'rgba(255, 255, 255, 0.4)',\n  top: '0px'\n};\n\nconst horizontalNavStyle = {\n  position: 'absolute',\n  width: '100%',\n  top: '50%',\n  zIndex: 10\n};\n\nconst horizontalSliderProps = {\n  name: 'horizontalSlider1',\n  infinite: true\n};\n\nclass FullpageReact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: {\n        Fullpage: 0,\n        horizontalSlider1: 0\n      }\n    };\n\n    this.onSlideChangeStart = this.onSlideChangeStart.bind(this);\n    this.onSlideChangeEnd = this.onSlideChangeEnd.bind(this);\n  }\n\n  onSlideChangeStart(name, props, state, newState) {\n    if (!this.horizontalNav) {\n      this.horizontalNav = document.getElementById('horizontal-nav');\n    }\n\n    if (name === 'horizontalSlider1') {\n      scrollNavStart(this.horizontalNav);\n    }\n  }\n\n  onSlideChangeEnd(name, props, state, newState) {\n    if (name === 'horizontalSlider1') {\n      scrollNavEnd(this.horizontalNav);\n    }\n\n    const oldActive = this.state.active;\n    const sliderState = {\n      [name]: newState.activeSlide\n    };\n\n    const updatedState = Object.assign(oldActive, sliderState);\n    this.setState(updatedState);\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { active } = this.state;\n\n    const currentActive = active.Fullpage;\n    const prevSlide = changeFullpageSlide.bind(null, currentActive - 1);\n    const nextSlide = changeFullpageSlide.bind(null, currentActive + 1);\n    const goToTop = changeFullpageSlide.bind(null, 0);\n\n    const horizontalSliderName = horizontalSliderProps.name;\n    const horizontalActive = this.state.active[horizontalSliderName];\n\n    const prevHorizontalSlide = changeHorizontalSlide.bind(null, horizontalSliderName, horizontalActive - 1);\n    const nextHorizontalSlide = changeHorizontalSlide.bind(null, horizontalSliderName, horizontalActive + 1);\n\n    const topNav = (\n      <div style={topNavStyle}>\n        <span onClick={prevSlide}>\n          <button>Previous Slide</button>\n        </span>\n        <span onClick={goToTop}>\n          <button>Back to Top</button>\n        </span>\n        <span onClick={nextSlide}>\n          <button>Next Slide</button>\n        </span>\n      </div>\n    );\n\n    const horizontalNav = (\n      <div id='horizontal-nav' style={horizontalNavStyle}>\n        <span onClick={prevHorizontalSlide}><button>PREV</button></span>\n        <span style={{position: 'absolute', right: '0px'}} onClick={nextHorizontalSlide}><button>Next</button></span>\n      </div>\n    );\n\n    const horizontalSlides = [\n      <Slide style={{backgroundColor: 'red'}}><p>Horizontal 1</p></Slide>,\n      <Slide style={{backgroundColor: 'yellow'}}><p>Horizontal 2</p></Slide>,\n      <Slide style={{backgroundColor: 'green'}}><p>Horizontal 3</p></Slide>\n    ];\n    horizontalSliderProps.slides = horizontalSlides;\n\n    const horizontalSlider = <HorizontalSlider id='horizontal-slider-1' {...horizontalSliderProps}>{horizontalNav}</HorizontalSlider>;\n\n    const verticalSlides = [\n      <Slide style={{backgroundColor: 'blue'}}>\n        <p>Slide 1</p>\n      </Slide>,\n      horizontalSlider,\n      <Slide style={{backgroundColor: 'pink'}}><p>Slide 3</p></Slide>\n    ];\n    fullPageOptions.slides = verticalSlides;\n\n    return (\n      <Fullpage onSlideChangeStart={this.onSlideChangeStart} onSlideChangeEnd={this.onSlideChangeEnd} {...fullPageOptions}>\n        {topNav}\n      </Fullpage>\n    );\n  }\n}\n\nfunction scrollNavStart(nav) {\n  // make the nav fixed when we start scrolling horizontally\n  nav.style.position = 'fixed';\n}\n\nfunction scrollNavEnd(nav) {\n  // make the nav absolute when scroll finishes\n  nav.style.position = 'absolute';\n}\n\nexport default FullpageReact;"]},"metadata":{},"sourceType":"module"}